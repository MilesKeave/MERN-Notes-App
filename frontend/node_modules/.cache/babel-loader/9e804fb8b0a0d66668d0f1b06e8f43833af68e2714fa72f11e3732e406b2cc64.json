{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_LOGOUT } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password, pic) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      pic,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_LOGOUT","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","pic","logout","removeItem"],"sources":["/Users/mileskeaveny/MERN-Notes-Application/frontend/src/actions/userActions.js"],"sourcesContent":["import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_LOGOUT } from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password)=> async(dispatch)=>{\n\n    try{\n        dispatch({type:USER_LOGIN_REQUEST});\n\n        const config ={\n            headers:{\n                \"Content-type\": \"application/json\",\n        }\n        };\n        const {data} = await axios.post(\n            \"/api/users/login\",\n            {email,password},\n            config\n        );\n\n        dispatch({type:USER_LOGIN_SUCCESS, payload: data});\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    }\n    catch(error){\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n\n    }\n}\n\nexport const register = (name, email, password, pic) => async(dispatch)=>{\n    try{ \n        dispatch({type: USER_REGISTER_REQUEST});\n\n        const config ={\n            headers:{\n                \"Content-type\": \"application/json\"\n            }\n        }\n\n        const {data} = await axios.post(\n            \"/api/users\",\n            {name, pic, email, password},\n            config\n        )\n\n        dispatch({type: USER_REGISTER_REQUEST, payload:data});\n        dispatch({type: USER_LOGIN_SUCCESS, payload:data});\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    }catch(error){\n\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n\n    }\n}\n\nexport const logout=()=>async(dispatch)=>{\n    localStorage.removeItem(\"userInfo\");\n    dispatch({type: USER_LOGOUT});\n}\n\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,WAAW,QAAQ,4BAA4B;AAC5J,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAI,MAAMC,QAAQ,IAAG;EAEtD,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAACV;IAAkB,CAAC,CAAC;IAEnC,MAAMW,MAAM,GAAE;MACVC,OAAO,EAAC;QACJ,cAAc,EAAE;MACxB;IACA,CAAC;IACD,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC3B,kBAAkB,EAClB;MAACP,KAAK;MAACC;IAAQ,CAAC,EAChBG,MACJ,CAAC;IAEDF,QAAQ,CAAC;MAACC,IAAI,EAACT,kBAAkB;MAAEc,OAAO,EAAEF;IAAI,CAAC,CAAC;IAElDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAE1D,CAAC,CACD,OAAMO,KAAK,EAAC;IACRX,QAAQ,CAAC;MACLC,IAAI,EAAEX,eAAe;MACrBgB,OAAO,EACHK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;EAEN;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEjB,KAAK,EAAEC,QAAQ,EAAEiB,GAAG,KAAK,MAAMhB,QAAQ,IAAG;EACrE,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAAEP;IAAqB,CAAC,CAAC;IAEvC,MAAMQ,MAAM,GAAE;MACVC,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC3B,YAAY,EACZ;MAACU,IAAI;MAAEC,GAAG;MAAElB,KAAK;MAAEC;IAAQ,CAAC,EAC5BG,MACJ,CAAC;IAEDF,QAAQ,CAAC;MAACC,IAAI,EAAEP,qBAAqB;MAAEY,OAAO,EAACF;IAAI,CAAC,CAAC;IACrDJ,QAAQ,CAAC;MAACC,IAAI,EAAET,kBAAkB;MAAEc,OAAO,EAACF;IAAI,CAAC,CAAC;IAElDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAE1D,CAAC,QAAMO,KAAK,EAAC;IAETX,QAAQ,CAAC;MACLC,IAAI,EAAER,kBAAkB;MACxBa,OAAO,EAAEK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAChDF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IAChB,CAAC,CAAC;EAEN;AACJ,CAAC;AAED,OAAO,MAAMI,MAAM,GAACA,CAAA,KAAI,MAAMjB,QAAQ,IAAG;EACrCO,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;EACnClB,QAAQ,CAAC;IAACC,IAAI,EAAEN;EAAW,CAAC,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}